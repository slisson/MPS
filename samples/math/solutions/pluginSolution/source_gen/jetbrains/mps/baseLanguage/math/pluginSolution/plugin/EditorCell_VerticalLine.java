package jetbrains.mps.baseLanguage.math.pluginSolution.plugin;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.cells.EditorCell_Basic;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import java.awt.Graphics;
import jetbrains.mps.nodeEditor.cells.ParentSettings;
import java.awt.Color;
import jetbrains.mps.openapi.editor.cells.EditorCell_Collection;

public class EditorCell_VerticalLine extends EditorCell_Basic {
  private boolean isCaretShown;
  public EditorCell_VerticalLine(EditorContext context, SNode node) {
    super(context, node);
  }
  @Override
  protected void paintContent(Graphics g, ParentSettings parentSettings) {
    if (this.isSelected()) {
      g.setColor(Color.BLACK);
      EditorCell_Collection parent = this.getParent();
      int x = parent.getX();
      int y = parent.getY();
      int width = parent.getWidth();
      int height = parent.getHeight();
      g.fillRect(x + width, y, 1, height);
      g.fillRect(x, y + height, width, 1);
    }
  }
  @Override
  public void switchCaretVisible() {
    this.isCaretShown = !(this.isCaretShown);
  }
  @Override
  public void relayoutImpl() {
    getLayoutModel().getContentBox().setSize(1, 1);
  }
}
