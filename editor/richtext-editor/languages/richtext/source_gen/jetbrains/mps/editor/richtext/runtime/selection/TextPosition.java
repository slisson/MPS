package jetbrains.mps.editor.richtext.runtime.selection;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.EditorComponent;
import jetbrains.mps.editor.multiline.cells.EditorCell_Multiline;

public class TextPosition {
  public TextPosition() {
  }

  public TextPosition(SNode word, int relativePos) {
    this.setWord(word);
    this.setRelativePos(relativePos);
  }

  public void restoreCaretPosition(EditorComponent editorComponent) {
    EditorCell_Multiline mlCell = as_5bohcb_a0a0a2(editorComponent.findNodeCell(getWord()), EditorCell_Multiline.class);
    mlCell.setCaretPosition(getRelativePos(), true);
  }

  private SNode myWord;

  public SNode getWord() {
    return this.myWord;
  }

  public void setWord(SNode value) {
    this.myWord = value;
  }

  private int myRelativePos;

  public int getRelativePos() {
    return this.myRelativePos;
  }

  public void setRelativePos(int value) {
    this.myRelativePos = value;
  }

  private static <T> T as_5bohcb_a0a0a2(Object o, Class<T> type) {
    return (type.isInstance(o) ? (T) o : null);
  }
}
